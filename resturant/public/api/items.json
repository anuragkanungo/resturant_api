{
  "apiVersion": "1.0",
  "swaggerVersion": "1.2",
  "basePath": "http://localhost:3000",
  "resourcePath": "items",
  "apis": [
    {
      "path": "/items.json",
      "operations": [
        {
          "parameters": [
            {
              "paramType": "header",
              "name": "auth_token",
              "type": "string",
              "description": "Authentication token",
              "required": false
            }
          ],
          "summary": "Returns all items",
          "notes": "This lists all the items",
          "responseMessages": [
            {
              "code": 500,
              "responseModel": null,
              "message": "Requested Range Not Satisfiable"
            }
          ],
          "nickname": "Items#index",
          "method": "get"
        }
      ]
    },
    {
      "path": "/items.json",
      "operations": [
        {
          "parameters": [
            {
              "paramType": "header",
              "name": "auth_token",
              "type": "string",
              "description": "Authentication token",
              "required": false
            },
            {
              "paramType": "form",
              "name": "name",
              "type": "string",
              "description": "Name",
              "required": true
            },
            {
              "paramType": "form",
              "name": "description",
              "type": "string",
              "description": "Description",
              "required": true
            },
            {
              "paramType": "form",
              "name": "price",
              "type": "decimal",
              "description": "Price",
              "required": true
            }
          ],
          "summary": "Creates a new Item",
          "responseMessages": [
            {
              "code": 401,
              "responseModel": null,
              "message": "Unauthorized"
            },
            {
              "code": 406,
              "responseModel": null,
              "message": "Not Acceptable"
            }
          ],
          "nickname": "Items#create",
          "method": "post"
        }
      ]
    },
    {
      "path": "/items/{id}.json",
      "operations": [
        {
          "parameters": [
            {
              "paramType": "header",
              "name": "auth_token",
              "type": "string",
              "description": "Authentication token",
              "required": false
            },
            {
              "paramType": "path",
              "name": "id",
              "type": "integer",
              "description": "Item Id",
              "required": false
            }
          ],
          "summary": "Fetches a single Item",
          "responseMessages": [
            {
              "code": 200,
              "responseModel": "Item",
              "message": "Success"
            },
            {
              "code": 401,
              "responseModel": null,
              "message": "Unauthorized"
            },
            {
              "code": 404,
              "responseModel": null,
              "message": "Not Found"
            },
            {
              "code": 406,
              "responseModel": null,
              "message": "Not Acceptable"
            }
          ],
          "nickname": "Items#show",
          "method": "get"
        }
      ]
    },
    {
      "path": "/items/{id}.json",
      "operations": [
        {
          "parameters": [
            {
              "paramType": "header",
              "name": "auth_token",
              "type": "string",
              "description": "Authentication token",
              "required": false
            },
            {
              "paramType": "path",
              "name": "id",
              "type": "integer",
              "description": "Item Id",
              "required": true
            },
            {
              "paramType": "form",
              "name": "name",
              "type": "string",
              "description": "Name",
              "required": false
            },
            {
              "paramType": "form",
              "name": "description",
              "type": "string",
              "description": "Description",
              "required": false
            },
            {
              "paramType": "form",
              "name": "price",
              "type": "decimal",
              "description": "Price",
              "required": false
            }
          ],
          "summary": "Updates an existing Item",
          "responseMessages": [
            {
              "code": 401,
              "responseModel": null,
              "message": "Unauthorized"
            },
            {
              "code": 404,
              "responseModel": null,
              "message": "Not Found"
            },
            {
              "code": 406,
              "responseModel": null,
              "message": "Not Acceptable"
            }
          ],
          "nickname": "Items#update",
          "method": "patch"
        }
      ]
    },
    {
      "path": "/items/{id}.json",
      "operations": [
        {
          "parameters": [
            {
              "paramType": "header",
              "name": "auth_token",
              "type": "string",
              "description": "Authentication token",
              "required": false
            },
            {
              "paramType": "path",
              "name": "id",
              "type": "integer",
              "description": "Item Id",
              "required": false
            }
          ],
          "summary": "Deletes an existing User item",
          "responseMessages": [
            {
              "code": 401,
              "responseModel": null,
              "message": "Unauthorized"
            },
            {
              "code": 404,
              "responseModel": null,
              "message": "Not Found"
            }
          ],
          "nickname": "Items#destroy",
          "method": "delete"
        }
      ]
    }
  ],
  "authorizations": null
}